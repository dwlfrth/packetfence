---
- hosts: pfservers
  name: Configure Packetfence VM
  become: True

  vars:
    nodejs_version: "14.x"
    npm_config_unsafe_perm: "true"
    docker_images:
      - pfdebian
      - radiusd
      - pfbuild-debian-bullseye

  roles:
    # nodejs is already installed on Debian during build of Vagrant images
    - role: geerlingguy.nodejs
      tags: nodejs

  tasks:
    - name: Install Cypress dependencies on debian
      community.general.make:
        chdir: /usr/local/pf/t/html/pfappserver
        target: install-debian
        file: /usr/local/pf/t/html/pfappserver/Makefile
      become: yes
      when: ansible_facts['os_family'] == "Debian"
      tags: cypress

    - name: Install Cypress dependencies on el8
      community.general.make:
        chdir: /usr/local/pf/t/html/pfappserver
        target: install-rhel
        file: /usr/local/pf/t/html/pfappserver/Makefile
      become: yes
      when: ansible_facts['os_family'] == "RedHat"

    - name: Create localdev .local_env, mounts /usr/local/pf/html/pfappserver/root
      copy:
        dest: "/usr/local/pf/containers/.local_env"
        content: |
          LOCAL_DEV=true
          HTML_PFAPPSERVER_ROOT_MOUNT=/usr/local/pf/html/pfappserver/root
      when: lookup("env", "CI") != 'true'

    - name: Install python3-docker for images
      ansible.builtin.package:
        name: python3-docker
        state: present
      when: lookup("env", "CI") != 'true'

    - name: Pull images
      community.docker.docker_image:
        name: "ghcr.io/inverse-inc/packetfence/{{ item }}"
        tag: devel
        source: pull
      loop: "{{ docker_images }}"
      when: lookup("env", "CI") != 'true'

    - name: Tag and push images
      community.docker.docker_image:
        name: "ghcr.io/inverse-inc/packetfence/{{ item }}"
        repository: "packetfence/{{ item }}"
        tag: devel
        source: local
      loop: "{{ docker_images }}"
      when: lookup("env", "CI") != 'true'
