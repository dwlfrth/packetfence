---
- hosts: pfservers
  name: Run HTML pfappserver configurator tests
  become: True

  vars:
    test_suites:
    - pfappserver_configurator

  tasks:
    - name: Synchronize t/html/pfappserver
      ansible.posix.synchronize:
        src: "{{ lookup('env', 'VENOM_ROOT_DIR') }}/../html/pfappserver"
        dest: '/usr/local/pf/t/html/'
        archive: yes
        delete: yes
      when: lookup("env", "CI") != 'true'

    - name: Synchronize html/pfappserver/root/dist
      ansible.posix.synchronize:
        src: "{{ lookup('env', 'VENOM_ROOT_DIR') }}/../../html/pfappserver/root/dist"
        dest: '/usr/local/pf/html/pfappserver/root/'
        archive: yes
        delete: yes
      when: lookup("env", "CI") != 'true'

    - name: Synchronize docs for --build httpd.admin_dispatcher
      ansible.posix.synchronize:
        src: "{{ lookup('env', 'VENOM_ROOT_DIR') }}/../../docs"
        dest: '/usr/local/pf/'
        archive: yes
        delete: yes
      when: lookup("env", "CI") != 'true'

    - name: restart packetfence-httpd.admin_dispatcher
      ansible.builtin.service:
        name: packetfence-httpd.admin_dispatcher
        state: restarted
      when: lookup("env", "CI") != 'true'

    - name: Wait for build httpd.admin_dispatcher:8890
      wait_for:
        host: "localhost"
        port: 8890

    - name: Install Cypress
      community.general.make:
        chdir: /usr/local/pf/t/html/pfappserver
        target: install
        file: /usr/local/pf/t/html/pfappserver/Makefile
      become: yes
      tags: cypress

    - name: Run Venom testsuites
      command: '{{ venom_dir }}/venom-wrapper.sh {{ venom_dir }}/test_suites/{{ item }}'
      args:
        chdir: '{{ venom_dir }}'
      loop: '{{ test_suites }}'
      vars:
        venom_wrapper_args:
          # temp, overcome Venom issue:
          # - when running test suite one by one, previous logs and results are overriden
          # Venom will create one directory per test suite to store results
          VENOM_COMMON_FLAGS: '--output-dir={{ venom_dir }}/results/{{ item }}
            --var test_suite_results_dir={{ venom_dir }}/results/{{ item }}'

      # add inventory__group_environment to Ansible environment
      # useful to make env vars available for Venom
      environment: '{{ inventory__group_environment | d({})
                       | combine(venom_wrapper_args | d({})) }}'


